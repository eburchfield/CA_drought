
R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(memisc)
Error in library(memisc) : there is no package called ‘memisc’
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.2.3 
> library (lme4)
Loading required package: Matrix
Warning message:
package ‘lme4’ was built under R version 3.2.3 
> library (lmerTest)

Attaching package: ‘lmerTest’

The following object is masked from ‘package:lme4’:

    lmer

The following object is masked from ‘package:stats’:

    step

Warning message:
package ‘lmerTest’ was built under R version 3.2.3 
> library(HLMdiag)

Attaching package: ‘HLMdiag’

The following object is masked from ‘package:stats’:

    covratio

Warning message:
package ‘HLMdiag’ was built under R version 3.2.3 
> library (gstat)
Warning message:
package ‘gstat’ was built under R version 3.2.3 
> library(sp)
Warning message:
package ‘sp’ was built under R version 3.2.3 
> library(nlme)

Attaching package: ‘nlme’

The following object is masked from ‘package:lme4’:

    lmList

The following object is masked from ‘package:dplyr’:

    collapse

> library(rgdal)
Error in library(rgdal) : there is no package called ‘rgdal’
> library(INLA)
Loading required package: splines
Warning message:
package ‘INLA’ was built under R version 3.2.3 
> library(spdep)
Warning message:
package ‘spdep’ was built under R version 3.2.3 
> setwd("C:/Users/tuan/Dropbox/Kate_Emily/Data")
> #set up data, farming pixels only
> dsf <- tbl_df(read.csv("pt_data_kn.txt", stringsAsFactors = FALSE))
> ds = dsf[dsf$farm_flag==1,]
> ds = transform(ds, 
+                FID = as.numeric(FID),
+                tvp_09 = as.numeric(tvp_09),
+                tvp_14 = as.numeric(tvp_14),
+                delta_tvp = as.numeric(delta_tvp),
+                delta_lc = as.numeric(delta_lc),
+                HUC12 = as.numeric(HUC12),
+                AreaAcres = as.numeric(AreaAcres),
+                GW_dnsty15 = as.numeric(GW_dnsty15),
+                WR_density = as.numeric(WR_density))
Warning messages:
1: In eval(expr, envir, enclos) : NAs introduced by coercion
2: In eval(expr, envir, enclos) : NAs introduced by coercion
3: In eval(expr, envir, enclos) : NAs introduced by coercion
4: In eval(expr, envir, enclos) : NAs introduced by coercion
5: In eval(expr, envir, enclos) : NAs introduced by coercion
> ds[ds==999.99] <- NA
> data <- ds[ds$farm_flag == 1,]
> Rip <- ds$COUNT_Rip/ds$fmmp_area
> P1914 <- ds$COUNT_Pre1914/ds$fmmp_area
> y <- ds$tvp_14
> 
> #####build group index that corresponds to adjacency matrix#####
> uniq<-unique(ds$HUC12)
> n.HUC <- length(uniq)
> HUC <- rep(NA,dim(ds)[1])
> for (i in 1:n.HUC){
+   HUC[ds$HUC12 ==uniq[i]]<-i
+ }
> HUC_index <- cbind(uniq, 1:56)
> 
> dsnew <- mutate(ds,HUCIDa=HUC, HUCID=HUC)
> 
> # adjacency matrix at group level
> H <- inla.read.graph(filename = "shp.graph")
> #####building a mesh for the level 1 data######
> coords<- select(dsnew,lon, lat) #pull coordinates
> coordinates(coords) = c('lon','lat')
> proj4string(coords)<-   #specify the projection, not sure if we need this
+   " +init=epsg:4269 +proj=longlat +ellps=GRS80 +datum=NAD83
+ +no_defs +towgs84=0,0,0"
> coords<-as.data.frame(coords) #convert to workable formate
> #for mesh3 remove the outer domain by removing second value in max.edge and offset lists
> mesh3 <-inla.mesh.2d(coords, max.edge=c(0.1), offset=c(0.1), cutoff=0.02) 
> plot(mesh3)
> formula3.mlm <-y ~ -1 + intercept + f(spatial.field, model = spde) + f(HUCID, model="bym", graph = H, scale.model=TRUE) 
> s3.index <- inla.spde.make.index(name="spatial.field", n.spde=spde$n.spde)
Error in inla.spde.make.index(name = "spatial.field", n.spde = spde$n.spde) : 
  object 'spde' not found
> mlm3.stack.est <- inla.stack(data =list(y=y), 
+                             A=list(A.est,1),
+                             effects=list(c(s.index, list(intercept=1)), 
+                                          list(HUCID=dsnew$HUCID)),
+                             tag="est" )
Error in lapply(X = X, FUN = FUN, ...) : object 'A.est' not found
> #creating a model fitting object from mesh (Matern SPDE object simulates values at the vertices)
> spde <-inla.spde2.matern(mesh=mesh3, alpha=2) #pg 206, this mesh is for accounting for continuous spatial processes (landscape,etc..), and not for interpolating predictor values
> # creating the observation/projection matrix (sparse weight matrix pg 205)
> coords <-cbind(coords$lon, coords$lat)
> A.est <-inla.spde.make.A(mesh=mesh3,loc=coords) #object that reconciles mesh and observations
> #3-9-2016 just a spatial model using mesh and HUC index with adjacency
> formula3.mlm <-y ~ -1 + intercept + f(spatial.field, model = spde) + f(HUCID, model="bym", graph = H, scale.model=TRUE) 
> s3.index <- inla.spde.make.index(name="spatial.field", n.spde=spde$n.spde)
> mlm3.stack.est <- inla.stack(data =list(y=y), 
+                             A=list(A.est,1),
+                             effects=list(c(s.index, list(intercept=1)), 
+                                          list(HUCID=dsnew$HUCID)),
+                             tag="est" )
Error in lapply(X = X, FUN = FUN, ...) : object 's.index' not found
> s.index <- inla.spde.make.index(name="spatial.field", n.spde=spde$n.spde)
> formula3.mlm <-y ~ -1 + intercept + f(spatial.field, model = spde) + f(HUCID, model="bym", graph = H, scale.model=TRUE) 
> s3.index <- inla.spde.make.index(name="spatial.field", n.spde=spde$n.spde)
> mlm3.stack.est <- inla.stack(data =list(y=y), 
+                             A=list(A.est,1),
+                             effects=list(c(s.index, list(intercept=1)), 
+                                          list(HUCID=dsnew$HUCID)),
+                             tag="est" )
> output3.mlm <- inla (formula3.mlm,  data=inla.stack.data(mlm3.stack.est, spde=spde), control.predictor =list(A=inla.stack.A(mlm.stack.est), compute=TRUE))
Error in inla.require.inherits(stack, "inla.data.stack", "'stack'") : 
  object 'mlm.stack.est' not found
> output3.mlm <- inla (formula3.mlm,  data=inla.stack.data(mlm3.stack.est, spde=spde), control.predictor =list(A=inla.stack.A(mlm3.stack.est), compute=TRUE))
Note: method with signature ‘CsparseMatrix#Matrix#missing#replValue’ chosen for function ‘[<-’,
 target signature ‘dgCMatrix#ngCMatrix#missing#numeric’.
 "Matrix#nsparseMatrix#missing#replValue" would also be valid
Note: method with signature ‘Matrix#numLike’ chosen for function ‘%*%’,
 target signature ‘dgTMatrix#numeric’.
 "TsparseMatrix#ANY" would also be valid
Note: method with signature ‘sparseMatrix#matrix’ chosen for function ‘%*%’,
 target signature ‘dgTMatrix#matrix’.
 "TsparseMatrix#ANY" would also be valid
> mlm3.summary <- summary (output3.mlm)
> mlm3.summary

Call:
c("inla(formula = formula3.mlm, data = inla.stack.data(mlm3.stack.est, ",  "    spde = spde), control.predictor = list(A = inla.stack.A(mlm3.stack.est), ",  "    compute = TRUE))")

Time used:
 Pre-processing    Running inla Post-processing           Total 
         2.3021      10434.6687         27.1774      10464.1482 

Fixed effects:
            mean     sd 0.025quant 0.5quant 0.975quant   mode kld
intercept 1.1037 0.0352      1.036    1.103     1.1755 1.1017   0

Random effects:
Name	  Model
 spatial.field   SPDE2 model 
HUCID   BYM model 

Model hyperparameters:
                                            mean        sd 0.025quant 0.5quant 0.975quant
Precision for the Gaussian observations   46.944    0.2816     46.386   46.947     47.493
Theta1 for spatial.field                  -3.420    0.0401     -3.505   -3.417     -3.349
Theta2 for spatial.field                   3.478    0.0958      3.310    3.470      3.683
Precision for HUCID (iid component)      545.242  200.0719    245.939  515.352   1020.444
Precision for HUCID (spatial component) 2152.334 1940.0015    392.375 1592.109   7294.941
                                           mode
Precision for the Gaussian observations  46.954
Theta1 for spatial.field                 -3.408
Theta2 for spatial.field                  3.448
Precision for HUCID (iid component)     459.339
Precision for HUCID (spatial component) 927.258

Expected number of effective parameters(std dev): 820.80(2.323)
Number of equivalent replicates : 69.17 

Marginal log-Likelihood:  27086.07 
Posterior marginals for linear predictor and fitted values computed

> #pull mean of posterior for variance, kappa, and range
> inla.emarginal(function(x)x, object$marginals.variance.nominal[[1]])
Error in inla.smarginal(marginal) : object 'object' not found
> inla.emarginal(function(x)x, object$marginals.kappa[[1]])
Error in inla.smarginal(marginal) : object 'object' not found
> inla.emarginal(function(x)x, object$marginals.range.nominal[[1]]) #spatial autocorrelation tends to zero by distance of 0.075 decimal degrees
Error in inla.smarginal(marginal) : object 'object' not found
> 
> #pull 95% intervals for ""
> inla.hpdmarginal(0.95, object$marginals.variance.nominal[[1]])
Error in inla.smarginal(marginal, keep.type = FALSE) : 
  object 'object' not found
> inla.hpdmarginal(0.95, object$marginals.kappa[[1]])
Error in inla.smarginal(marginal, keep.type = FALSE) : 
  object 'object' not found
> inla.hpdmarginal(0.95, object$marginals.range.nominal[[1]]) #spatial autocorrelation tends to zero by distance of 0.075 decimal degrees
Error in inla.smarginal(marginal, keep.type = FALSE) : 
  object 'object' not found
> inla.emarginal(function(x)x, object$marginals.variance.nominal[[1]])
Error in inla.smarginal(marginal) : object 'object' not found
> inla.emarginal(function(x)x, object$marginals.kappa[[1]])
Error in inla.smarginal(marginal) : object 'object' not found
> inla.emarginal(function(x)x, object$marginals.range.nominal[[1]]) #spatial autocorrelation tends to zero by distance of 0.075 decimal degrees
Error in inla.smarginal(marginal) : object 'object' not found
> formula.mlm <-y ~ -1 + intercept + f(spatial.field, model = spde) + f(HUCID, model="bym", graph = H, scale.model=TRUE) 
> mlm.stack.estdata <- inla.stack(data = list(y=y), 
+                                   A=list(A.est,1,1,1,1),
+                                   effects=list(c(s.index, list(intercept=1)), 
+                                                list(HUCID=dsnew$HUCID),
+                                     list(GW_dnsty15= dsnew$GW_dnsty15), 
+                                     list(WR_density=dsnew$WR_density), 
+                                     list(delta_lc=dsnew$delta_lc)),
+                                   tag="est" )
Note: method with signature ‘diagonalMatrix#sparseMatrix’ chosen for function ‘cbind2’,
 target signature ‘ddiMatrix#ddiMatrix’.
 "sparseMatrix#diagonalMatrix" would also be valid
> output.mlm <- inla (formula.mlm,  data=inla.stack.data(mlm.stack.est, spde=spde), control.predictor =list(A=inla.stack.A(mlm3.stack.est), compute=TRUE))
Error in inla.require.inherits(stack, "inla.data.stack", "'stack'") : 
  object 'mlm.stack.est' not found
> mlm.summary <- summary (output.mlm)
Error in summary(output.mlm) : 
  error in evaluating the argument 'object' in selecting a method for function 'summary': Error: object 'output.mlm' not found
> mlm.stack.estdata <- inla.stack(data = list(y=y), 
+                                   A=list(A.est,1,1,1,1),
+                                   effects=list(c(s.index, list(intercept=1)), 
+                                                list(HUCID=dsnew$HUCID),
+                                     list(GW_dnsty15= dsnew$GW_dnsty15), 
+                                     list(WR_density=dsnew$WR_density), 
+                                     list(delta_lc=dsnew$delta_lc)),
+                                   tag="est" )
> output.mlm <- inla (formula.mlm,  data=inla.stack.data(mlm.stack.est, spde=spde), control.predictor =list(A=inla.stack.A(mlm3.stack.est), compute=TRUE))
Error in inla.require.inherits(stack, "inla.data.stack", "'stack'") : 
  object 'mlm.stack.est' not found
> mlm.summary <- summary (output.mlm)
Error in summary(output.mlm) : 
  error in evaluating the argument 'object' in selecting a method for function 'summary': Error: object 'output.mlm' not found
> formula.mlm <-y ~ -1 + intercept + f(spatial.field, model = spde) + f(HUCID, model="bym", graph = H, scale.model=TRUE) 
> mlm.stack.est <- inla.stack(data = list(y=y), 
+                                   A=list(A.est,1,1,1,1),
+                                   effects=list(c(s.index, list(intercept=1)), 
+                                                list(HUCID=dsnew$HUCID),
+                                     list(GW_dnsty15= dsnew$GW_dnsty15), 
+                                     list(WR_density=dsnew$WR_density), 
+                                     list(delta_lc=dsnew$delta_lc)),
+                                   tag="est" )
> output.mlm <- inla (formula.mlm,  data=inla.stack.data(mlm.stack.est, spde=spde), control.predictor =list(A=inla.stack.A(mlm3.stack.est), compute=TRUE))
> mlm.summary <- summary (output.mlm)
> mlm.summary

Call:
c("inla(formula = formula.mlm, data = inla.stack.data(mlm.stack.est, ",  "    spde = spde), control.predictor = list(A = inla.stack.A(mlm3.stack.est), ",  "    compute = TRUE))")

Time used:
 Pre-processing    Running inla Post-processing           Total 
         1.2286       5567.9664          3.7960       5572.9911 

Fixed effects:
            mean     sd 0.025quant 0.5quant 0.975quant   mode kld
intercept 1.1037 0.0352      1.036    1.103     1.1755 1.1017   0

Random effects:
Name	  Model
 spatial.field   SPDE2 model 
HUCID   BYM model 

Model hyperparameters:
                                            mean        sd 0.025quant 0.5quant 0.975quant
Precision for the Gaussian observations   46.944    0.2815     46.387   46.946     47.494
Theta1 for spatial.field                  -3.422    0.0402     -3.507   -3.420     -3.350
Theta2 for spatial.field                   3.480    0.0968      3.310    3.472      3.687
Precision for HUCID (iid component)      545.732  200.2986    246.018  515.835   1021.484
Precision for HUCID (spatial component) 2152.499 1939.2259    392.161 1592.637   7293.231
                                           mode
Precision for the Gaussian observations  46.953
Theta1 for spatial.field                 -3.411
Theta2 for spatial.field                  3.449
Precision for HUCID (iid component)     459.787
Precision for HUCID (spatial component) 927.462

Expected number of effective parameters(std dev): 820.86(2.318)
Number of equivalent replicates : 69.17 

Marginal log-Likelihood:  27086.12 
Posterior marginals for linear predictor and fitted values computed

> object <- inla.spde2.result(inla=output.mlm,name="spatial.field",spde=spde,do.transf=TRUE)
> #pull mean of posterior for variance, kappa, and range
> inla.emarginal(function(x)x, object$marginals.variance.nominal[[1]])
[1] 0.07147927
> inla.emarginal(function(x)x, object$marginals.kappa[[1]])
[1] 32.23856
> inla.emarginal(function(x)x, object$marginals.range.nominal[[1]]) #spatial autocorrelation tends to zero by distance of 0.075 decimal degrees
[1] 0.08771396
> 
> #pull 95% intervals for ""
> inla.hpdmarginal(0.95, object$marginals.variance.nominal[[1]])
                 low       high
level:0.95 0.0530044 0.08967139
> inla.hpdmarginal(0.95, object$marginals.kappa[[1]])
                low     high
level:0.95 27.06581 38.77137
> inla.hpdmarginal(0.95, object$marginals.range.nominal[[1]]) #spatial autocorrelation tends to zero by distance of 0.075 decimal degrees
                  low      high
level:0.95 0.07171407 0.1026826
> object3 <- inla.spde2.result(inla=output.mlm,name="spatial.field",spde=spde,do.transf=TRUE)
> inla.emarginal(function(x)x, object3$marginals.variance.nominal[[1]])
[1] 0.07147927
> inla.emarginal(function(x)x, object3$marginals.kappa[[1]])
[1] 32.23856
> inla.emarginal(function(x)x, object3$marginals.range.nominal[[1]]) #spatial autocorrelation tends to zero by distance of 0.075 decimal degrees
[1] 0.08771396
> formula3.mlm <-y ~ -1 + intercept + f(spatial.field, model = spde) + f(HUCID, model="bym", graph = H, scale.model=TRUE) 
> # don't think we need this: s3.index <- inla.spde.make.index(name="spatial.field", n.spde=spde$n.spde)
> mlm3.stack.est <- inla.stack(data =list(y=y), 
+                             A=list(A.est,1),
+                             effects=list(c(s.index, list(intercept=1)), 
+                                          list(HUCID=dsnew$HUCID)),
+                             tag="est" )
> output3.mlm <- inla (formula3.mlm,  data=inla.stack.data(mlm3.stack.est, spde=spde), control.predictor =list(A=inla.stack.A(mlm3.stack.est), compute=TRUE))
> mlm3.summary <- summary (output3.mlm)
> object3 <- inla.spde2.result(inla=output.mlm,name="spatial.field",spde=spde,do.transf=TRUE)
> #pull mean of posterior for variance, kappa, and range
> inla.emarginal(function(x)x, object3$marginals.variance.nominal[[1]])
[1] 0.07147927
> inla.emarginal(function(x)x, object3$marginals.kappa[[1]])
[1] 32.23856
> inla.emarginal(function(x)x, object3$marginals.range.nominal[[1]]) #spatial autocorrelation tends to zero by distance of 0.075 decimal degrees
[1] 0.08771396
> formula.mlm <-y ~ -1 + intercept + f(spatial.field, model = spde) + f(HUCID, model="bym", graph = H, scale.model=TRUE) 
> mlm.stack.est <- inla.stack(data = list(y=y), 
+                                   A=list(A.est,1,1,1,1),
+                                   effects=list(c(s.index, list(intercept=1)), 
+                                                list(HUCID=dsnew$HUCID),
+                                     list(GW_dnsty15= dsnew$GW_dnsty15), 
+                                     list(WR_density=dsnew$WR_density), 
+                                     list(delta_lc=dsnew$delta_lc)),
+                                   tag="est" )
> output.mlm <- inla (formula.mlm,  data=inla.stack.data(mlm.stack.est, spde=spde), control.predictor =list(A=inla.stack.A(mlm.stack.est), compute=TRUE))
> mlm.summary <- summary (output.mlm)
> object <- inla.spde2.result(inla=output.mlm,name="spatial.field",spde=spde,do.transf=TRUE)
> #pull mean of posterior for variance, kappa, and range
> inla.emarginal(function(x)x, object$marginals.variance.nominal[[1]])
[1] 0.07166355
> inla.emarginal(function(x)x, object$marginals.kappa[[1]])
[1] 31.90143
> inla.emarginal(function(x)x, object$marginals.range.nominal[[1]]) #spatial autocorrelation tends to zero by distance of 0.075 decimal degrees
[1] 0.08864098
> mlm.summary

Call:
c("inla(formula = formula.mlm, data = inla.stack.data(mlm.stack.est, ",  "    spde = spde), control.predictor = list(A = inla.stack.A(mlm.stack.est), ",  "    compute = TRUE))")

Time used:
 Pre-processing    Running inla Post-processing           Total 
         1.3195       6675.5909          3.6329       6680.5433 

Fixed effects:
            mean     sd 0.025quant 0.5quant 0.975quant   mode kld
intercept 1.1049 0.0361     1.0356   1.1042     1.1785 1.1029   0

Random effects:
Name	  Model
 spatial.field   SPDE2 model 
HUCID   BYM model 

Model hyperparameters:
                                            mean        sd 0.025quant 0.5quant 0.975quant
Precision for the Gaussian observations   47.027    0.2823     46.466   47.030     47.574
Theta1 for spatial.field                  -3.414    0.0401     -3.499   -3.410     -3.343
Theta2 for spatial.field                   3.469    0.0939      3.304    3.462      3.670
Precision for HUCID (iid component)      549.593  205.0196    242.194  519.375   1037.056
Precision for HUCID (spatial component) 2147.270 1956.8474    389.455 1580.395   7330.503
                                           mode
Precision for the Gaussian observations  47.040
Theta1 for spatial.field                 -3.401
Theta2 for spatial.field                  3.440
Precision for HUCID (iid component)     462.088
Precision for HUCID (spatial component) 914.884

Expected number of effective parameters(std dev): 821.80(2.416)
Number of equivalent replicates : 69.09 

Marginal log-Likelihood:  27130.31 
Posterior marginals for linear predictor and fitted values computed

> formula.mlm.b <-y ~ -1 + intercept + GW_dnsty15 + WR_density + delta_lc + f(spatial.field, model = spde) + f(HUCID, model="bym", graph = H, scale.model=TRUE) 
> mlm.stack.est.b <- inla.stack(data = list(y=y), 
+                             A=list(A.est,1,1,1,1),
+                             effects=list(c(s.index, list(intercept=1)), 
+                                          list(HUCID=dsnew$HUCID),
+                                          list(GW_dnsty15= dsnew$GW_dnsty15), 
+                                          list(WR_density=dsnew$WR_density), 
+                                          list(delta_lc=dsnew$delta_lc)),
+                             tag="est" )
> output.mlm.b <- inla (formula.mlm.b,  data=inla.stack.data(mlm.stack.est.b, spde=spde), control.predictor =list(A=inla.stack.A(mlm.stack.est.b), compute=TRUE))
> mlm.b.summary <- summary (output.mlm.b)
> mlm.b.summary

Call:
c("inla(formula = formula.mlm.b, data = inla.stack.data(mlm.stack.est.b, ",  "    spde = spde), control.predictor = list(A = inla.stack.A(mlm.stack.est.b), ",  "    compute = TRUE))")

Time used:
 Pre-processing    Running inla Post-processing           Total 
         1.3021       6989.2833          3.6226       6994.2080 

Fixed effects:
              mean     sd 0.025quant 0.5quant 0.975quant    mode kld
intercept   1.1081 0.0368     1.0376   1.1073     1.1834  1.1060   0
GW_dnsty15  0.1316 0.1518    -0.1651   0.1307     0.4336  0.1289   0
WR_density -0.0007 0.0006    -0.0019  -0.0007     0.0005 -0.0007   0
delta_lc   -0.0143 0.0060    -0.0260  -0.0143    -0.0026 -0.0143   0

Random effects:
Name	  Model
 spatial.field   SPDE2 model 
HUCID   BYM model 

Model hyperparameters:
                                            mean        sd 0.025quant 0.5quant 0.975quant
Precision for the Gaussian observations   47.038    0.2836     46.469   47.043     47.582
Theta1 for spatial.field                  -3.438    0.0417     -3.524   -3.436     -3.361
Theta2 for spatial.field                   3.482    0.1064      3.294    3.474      3.709
Precision for HUCID (iid component)      480.558  179.7866    243.810  441.864    933.929
Precision for HUCID (spatial component) 2383.950 1900.3382    429.325 1872.908   7404.533
                                           mode
Precision for the Gaussian observations   47.06
Theta1 for spatial.field                  -3.43
Theta2 for spatial.field                   3.45
Precision for HUCID (iid component)      375.37
Precision for HUCID (spatial component) 1099.83

Expected number of effective parameters(std dev): 823.31(2.622)
Number of equivalent replicates : 68.96 

Marginal log-Likelihood:  27109.61 
Posterior marginals for linear predictor and fitted values computed

> object.b <- inla.spde2.result(inla=output.mlm.b,name="spatial.field",spde=spde,do.transf=TRUE)
> #pull mean of posterior for variance, kappa, and range
> inla.emarginal(function(x)x, object.b$marginals.variance.nominal[[1]])
[1] 0.07356624
> inla.emarginal(function(x)x, object.b$marginals.kappa[[1]])
[1] 32.29764
> inla.emarginal(function(x)x, object.b$marginals.range.nominal[[1]]) #spatial autocorrelation tends to zero by distance of 0.075 decimal degrees
[1] 0.08755176
> write.table(object.b, "objectb.csv")
Error in data.frame(summary.values = list(ID = c(0, 1, 2, 3, 4, 5, 6,  : 
  arguments imply differing number of rows: 930, 35, 2, 1, 1024
> write.list(object.b, "objectb.csv")
Error: could not find function "write.list"
> write.(object.b.summary.values, "objectb.csv")
Error: could not find function "write."
> write.table(object.b.summary.values, "objectb.csv")
Error in is.data.frame(x) : object 'object.b.summary.values' not found
> write.table(object.b$summary.values, "objectb.csv")
> write.table(output.mlm.b$summary.fixed,"output_mlmb_fixed.csv")
> write.table(output.mlm.b$summary.random,"output_mlmb_random.csv")
Error in data.frame(spatial.field = list(ID = c(0, 1, 2, 3, 4, 5, 6, 7,  : 
  arguments imply differing number of rows: 930, 114
> write.table(output.mlm.b$summary.random$spatial.field,"output_mlmb_random_spat.csv")
> write.table(output.mlm.b$summary.random$HUCID,"output_mlmb_random_HUC.csv")

> save.image("C:/Users/tuan/Desktop/3-11 inla environment.RData")
> formula.mlm.c <-y ~ -1 + intercept + GW_dnsty15 + WR_density + delta_lc + f(spatial.field, model = spde) + f(HUCID, model="bym", graph = H, scale.model=TRUE) + f(HUCIDa,delta_lc, model="iid")  
> mlm.stack.est.c <- inla.stack(data = list(y=y), 
+                               A=list(A.est,1,1,1,1,1),
+                               effects=list(c(s.index, list(intercept=1)), 
+                                            list(HUCID=dsnew$HUCID),
+                                            list(HUCIDa=dsnew$HUCIDa),
+                                            list(GW_dnsty15= dsnew$GW_dnsty15), 
+                                            list(WR_density=dsnew$WR_density), 
+                                            list(delta_lc=dsnew$delta_lc)),
+                               tag="est" )
> output.mlm.c <- inla (formula.mlm.c,  data=inla.stack.data(mlm.stack.est.c, spde=spde), control.predictor =list(A=inla.stack.A(mlm.stack.est.c), compute=TRUE))
> mlm.c.summary <- summary (output.mlm.c)
> object.c <- inla.spde2.result(inla=output.mlm.c,name="spatial.field",spde=spde,do.transf=TRUE)
> mlm.c.summary

Call:
c("inla(formula = formula.mlm.c, data = inla.stack.data(mlm.stack.est.c, ",  "    spde = spde), control.predictor = list(A = inla.stack.A(mlm.stack.est.c), ",  "    compute = TRUE))")

Time used:
 Pre-processing    Running inla Post-processing           Total 
         1.4257      13619.8380          6.3419      13627.6056 

Fixed effects:
              mean     sd 0.025quant 0.5quant 0.975quant    mode kld
intercept   1.1078 0.0364     1.0380   1.1072     1.1818  1.1062   0
GW_dnsty15  0.1319 0.1518    -0.1648   0.1308     0.4345  0.1289   0
WR_density -0.0007 0.0006    -0.0019  -0.0007     0.0005 -0.0007   0
delta_lc   -0.0143 0.0060    -0.0260  -0.0143    -0.0026 -0.0143   0

Random effects:
Name	  Model
 spatial.field   SPDE2 model 
HUCID   BYM model 
HUCIDa   IID model 

Model hyperparameters:
                                             mean        sd 0.025quant  0.5quant 0.975quant
Precision for the Gaussian observations    47.031 2.819e-01     46.474    47.032     47.583
Theta1 for spatial.field                   -3.447 5.700e-02     -3.574    -3.440     -3.352
Theta2 for spatial.field                    3.508 1.190e-01      3.311     3.494      3.772
Precision for HUCID (iid component)       504.806 2.023e+02    255.826   456.315   1024.445
Precision for HUCID (spatial component)  2477.493 1.909e+03    340.762  2000.415   7390.289
Precision for HUCIDa                    17469.873 1.812e+04   1207.578 12061.831  65756.526
                                            mode
Precision for the Gaussian observations   47.036
Theta1 for spatial.field                  -3.422
Theta2 for spatial.field                   3.455
Precision for HUCID (iid component)      375.929
Precision for HUCID (spatial component)  988.024
Precision for HUCIDa                    3302.090

Expected number of effective parameters(std dev): 823.11(2.152)
Number of equivalent replicates : 68.98 

Marginal log-Likelihood:  27109.90 
Posterior marginals for linear predictor and fitted values computed
